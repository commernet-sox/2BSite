<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Npoi.Mapper</name>
    </assembly>
    <members>
        <member name="T:Npoi.Mapper.AnonymousTypeFactory">
            <summary>
            Methods for creating anonymous type dynamically.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.AnonymousTypeFactory.CreateObject(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an object from an anonymous type with the specified name/value pairs.
            </summary>
            <param name="valueDictionary">mappings of property names to values</param>
            <returns>the object</returns>
        </member>
        <member name="M:Npoi.Mapper.AnonymousTypeFactory.CreateObject(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)">
            <summary>
            Creates an object for the specified name/value pairs with the specified anonymous type.
            </summary>
            <remarks>
            This version of the <c>CreateObject</c> method can be used when you need more control 
            over how the anonymous type is generated.
            </remarks>
            <param name="valueDictionary">mappings of property names to values</param>
            <param name="anonymousType">the anonymous type to use for the resulting object</param>
            <returns>the object</returns>
        </member>
        <member name="M:Npoi.Mapper.AnonymousTypeFactory.CreateType(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}})">
            <summary>
            Creates an anonymous type for the specified property name/type pairs.
            </summary>
            <param name="typePairs">mappings of property names to types</param>
            <returns>the anonymous type</returns>
        </member>
        <member name="M:Npoi.Mapper.AnonymousTypeFactory.CreateType(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.Boolean)">
            <summary>
            Creates an anonymous type that may be mutable for the specified property name/type pairs.
            </summary>
            <param name="typePairs">mappings of property names to types</param>
            <param name="isMutable">true if the anonymous type's properties should have setters</param>
            <returns>the anonymous type</returns>
        </member>
        <member name="M:Npoi.Mapper.AnonymousTypeFactory.CreateType(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.Boolean,System.Type)">
            <summary>
            Creates an anonymous type that may be mutable for the specified property name/type pairs with the (optional) parent type.
            </summary>
            <param name="typePairs">mappings of property names to types</param>
            <param name="isMutable">true if the anonymous type's properties should have setters</param>
            <param name="parent">the parent of the anonymous type, or null to not specify a base type</param>
            <returns>the anonymous type</returns>
        </member>
        <member name="M:Npoi.Mapper.AnonymousTypeFactory.CreateGenericTypeDefinition(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates an anonymous generic type definition for the specified property names.
            </summary>
            <param name="propertyNames">the property names</param>
            <returns>the anonymous generic type definition</returns>
        </member>
        <member name="M:Npoi.Mapper.AnonymousTypeFactory.CreateGenericTypeDefinition(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates an anonymous generic type definition that may be mutable with the specified property names.
            </summary>
            <param name="propertyNames">the property names</param>
            <param name="isMutable">true if the properties should have setters</param>
            <returns>the anonymous generic type definition</returns>
        </member>
        <member name="M:Npoi.Mapper.AnonymousTypeFactory.CreateGenericTypeDefinition(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Type)">
            <summary>
            Creates an anonymous generic type definition that may be mutable for the specified property names and (optional) parent type.
            </summary>
            <param name="propertyNames">the property names</param>
            <param name="isMutable">true if the properties should have setters</param>
            <param name="parent">the parent class of the anonymous type, or null if it has no parent class</param>
            <returns>the anonymous generic type definition</returns>
        </member>
        <member name="T:Npoi.Mapper.Attributes.ColumnAttribute">
            <summary>
            Specifies attributes for a property that is going to map to a column.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.Index">
            <summary>
            Column index.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.Name">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.PropertyName">
            <summary>
            Property name, this is only used for dynamic type.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.Property">
            <summary>
            Mapped property for this column.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.PropertyUnderlyingType">
            <summary>
            Get underlying type if property is nullable value type, otherwise return null.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.PropertyUnderlyingConverter">
            <summary>
            Get converter if property is nullable value type.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.UseLastNonBlankValue">
            <summary>
            Indicate whether to use the last non-blank value.
            Typically handle the blank error in merged cells.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.Ignored">
            <summary>
            Indicate whether to ignore the property.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.CustomFormat">
            <summary>
            Gets or sets the custom format, see https://support.office.com/en-us/article/Create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4 for the syntax.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.IgnoreErrors">
            <summary>
            Indicates whether or not to ignore all errors for the column.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.TryTake">
            <summary>
            Try take cell value for the given column when import data from file.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Attributes.ColumnAttribute.TryPut">
            <summary>
            Try set value to cell for the given column when export object to file.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.Attributes.ColumnAttribute.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.Attributes.ColumnAttribute"/> class.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.Attributes.ColumnAttribute.#ctor(System.UInt16)">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.Attributes.ColumnAttribute"/> class.
            </summary>
            <param name="index">The index of the column.</param>
        </member>
        <member name="M:Npoi.Mapper.Attributes.ColumnAttribute.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.Attributes.ColumnAttribute"/> class.
            </summary>
            <param name="name">The name of the column.</param>
        </member>
        <member name="M:Npoi.Mapper.Attributes.ColumnAttribute.Clone">
            <summary>
            Get a member wise clone of this object.
            </summary>
            <returns>The member wise clone.</returns>
        </member>
        <member name="M:Npoi.Mapper.Attributes.ColumnAttribute.Clone(System.Int32)">
            <summary>
            Get a member wise clone of this object with given index.
            </summary>
            <param name="index">The index of column.</param>
            <returns>The member wise clone with specified index.</returns>
        </member>
        <member name="M:Npoi.Mapper.Attributes.ColumnAttribute.MergeFrom(Npoi.Mapper.Attributes.ColumnAttribute,System.Boolean)">
            <summary>
            Merge properties from a source <see cref="T:Npoi.Mapper.Attributes.ColumnAttribute"/> object.
            All properties will be updated from source's specified properties.
            </summary>
            <param name="source">The object to merge from.</param>
            <param name="overwrite">
            Whether or not to overwrite specified properties from source if source's properties are specified.
            Note that Index and Name are considered together as one key property.
            </param>
        </member>
        <member name="M:Npoi.Mapper.Attributes.ColumnAttribute.MergeTo(System.Collections.Generic.Dictionary{System.Reflection.PropertyInfo,Npoi.Mapper.Attributes.ColumnAttribute},System.Boolean)">
            <summary>
            Merge properties to a attribute dictionary.
            </summary>
            <param name="attributes">The dictionary to be merged into.</param>
            <param name="overwrite">
            Whether or not to overwrite specified properties to existed object if that object's properties are specified.
            Note that Index and Name are considered together as one key property.
            </param>
        </member>
        <member name="T:Npoi.Mapper.Attributes.IgnoreAttribute">
            <summary>
            Specifies to ignore a property for mapping.
            </summary>
        </member>
        <member name="T:Npoi.Mapper.Attributes.UseLastNonBlankValueAttribute">
            <summary>
            Specifies to use the last non-blank value when reading from cells for this property.
            Typically handle the blank error in merged cells.
            </summary>
        </member>
        <member name="T:Npoi.Mapper.ColumnInfo">
            <summary>
            Information required for one column when mapping between object and file rows.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.ColumnInfo.HeaderValue">
            <summary>
            Value for the column header.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.ColumnInfo.Attribute">
            <summary>
            The mapped property information.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.ColumnInfo.LastNonBlankValue">
            <summary>
            The last non-blank cell value.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.ColumnInfo.CurrentValue">
            <summary>
            The current cell value, might be used for custom resolving.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.ColumnInfo.HeaderFormat">
            <summary>
            Get or set the header cell format.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.ColumnInfo.DataFormat">
            <summary>
            Get or set the data cell format.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.ColumnInfo.#ctor(System.Object,System.String,System.Reflection.PropertyInfo)">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.ColumnInfo"/> class.
            </summary>
            <param name="headerValue">The header value</param>
            <param name="columnName">The column name.</param>
            <param name="pi">The mapped PropertyInfo.</param>
        </member>
        <member name="M:Npoi.Mapper.ColumnInfo.#ctor(System.Object,System.Int32,System.Reflection.PropertyInfo)">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.ColumnInfo"/> class.
            </summary>
            <param name="headerValue">The header value</param>
            <param name="columnIndex">The column index.</param>
            <param name="pi">The mapped PropertyInfo.</param>
        </member>
        <member name="M:Npoi.Mapper.ColumnInfo.#ctor(System.Object,Npoi.Mapper.Attributes.ColumnAttribute)">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.ColumnInfo"/> class.
            </summary>
            <param name="headerValue">The header value</param>
            <param name="attribute">Mapped <c>PropertyMeta</c> object.</param>
        </member>
        <member name="M:Npoi.Mapper.ColumnInfo.RefreshAndGetValue(System.Object)">
            <summary>
            Refresh LastNonBlankValue and CurrentValue property then return value according UseLastNonBlankValue property.
            </summary>
            <param name="value">The current cell value.</param>
            <returns>
            Same object as input parameter if UseLastNonBlankValue is false;
            otherwise return LastNonBlankValue.
            </returns>
        </member>
        <member name="M:Npoi.Mapper.ColumnInfo.SetCellStyle(NPOI.SS.UserModel.ICell,System.Object,System.Boolean,System.Collections.Generic.Dictionary{System.Type,System.String},Npoi.Mapper.MapHelper)">
            <summary>
            Set style of the cell for export.
            Assume the cell belongs to current column.
            </summary>
            <param name="cell">The cell to be set.</param>
            <param name="value">The cell value object.</param>
            <param name="isHeader">If <c>true</c>, use HeaderFormat; otherwise use DataFormat.</param>
            <param name="defaultFormats">The default formats dictionary.</param>
            <param name="helper">The helper object.</param>
        </member>
        <member name="T:Npoi.Mapper.EnumerableExtensions">
            <summary>
            Provides extensions for <see cref="T:System.Collections.Generic.IEnumerable`1"/> class.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Extension for <see cref="T:System.Collections.Generic.IEnumerable`1"/> object to handle each item.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="sequence">The enumerable sequence.</param>
            <param name="action">Action to apply to each item.</param>
        </member>
        <member name="T:Npoi.Mapper.FormatExtensions">
            <summary>
            Extension methods for format.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.FormatExtensions.UseFormat(Npoi.Mapper.Mapper,System.Type,System.String)">
            <summary>
            Uses a custom format for all properties that have the same type.
            </summary>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="propertyType">The type of property to format.</param>
            <param name="customFormat">The custom format for the specified type.</param>
            <returns>The <see cref="T:Npoi.Mapper.Mapper"/> itself.</returns>
        </member>
        <member name="T:Npoi.Mapper.MapExtensions">
            <summary>
            Extension methods for mapping.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Map(Npoi.Mapper.Mapper,System.String,System.Reflection.PropertyInfo,System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Map property to a column by specified column name and <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="columnName">The column name.</param>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Map(Npoi.Mapper.Mapper,System.UInt16,System.Reflection.PropertyInfo,System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Map property to a column by specified column index(zero-based).
            </summary>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="columnIndex">The column index.</param>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Map``1(Npoi.Mapper.Mapper,System.String,System.String,System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Map property to a column by specified column name and property name.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="columnName">The column name.</param>
            <param name="propertyName">The property name.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Map``1(Npoi.Mapper.Mapper,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Map property to a column by specified column name and property selector.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="columnName">The column name.</param>
            <param name="propertySelector">Property selector.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Map``1(Npoi.Mapper.Mapper,System.UInt16,System.String,System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Map property to a column by specified column index(zero-based) and property name.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="columnIndex">The column index.</param>
            <param name="propertyName">The property name.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Map``1(Npoi.Mapper.Mapper,System.UInt16,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Map property to a column by specified column index(zero-based) and property selector.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="columnIndex">The column index.</param>
            <param name="propertySelector">Property selector.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Map``1(Npoi.Mapper.Mapper,System.UInt16,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Map property to a column by specified column index(zero-based) and property selector.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="columnIndex">The column index.</param>
            <param name="propertySelector">Property selector.</param>
            <param name="exportedColumnName">The column name for export.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Map``1(Npoi.Mapper.Mapper,System.UInt16,System.String,System.String,System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Map property to a column by specified column index(zero-based) and property name.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="columnIndex">The column index.</param>
            <param name="propertyName">The property name.</param>
            <param name="exportedColumnName">The column name for export.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.IgnoreErrorsFor``1(Npoi.Mapper.Mapper,System.String)">
            <summary>
            Ignores all errors for the specified property.
            </summary>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="propertyName">The property name.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.IgnoreErrorsFor``1(Npoi.Mapper.Mapper,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Ignores all errors for the specified property.
            </summary>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="propertySelector">Property selector.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapExtensions.Ignore``1(Npoi.Mapper.Mapper,System.String[])">
            <summary>
            Ignore property by names. Ignored properties will not be mapped for import and export.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="mapper">The <see cref="T:Npoi.Mapper.Mapper"/> object.</param>
            <param name="propertyNames">Property names.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="T:Npoi.Mapper.TypeExtensions">
            <summary>
            Provides extensions for <see cref="T:System.Type"/> class.
            </summary>
        </member>
        <member name="F:Npoi.Mapper.TypeExtensions.NumericTypes">
            <summary>
            Collection of numeric types.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.TypeExtensions.IsNumeric(System.Type)">
            <summary>
            Check if the given type is a numeric type.
            </summary>
            <param name="type">The type to be checked.</param>
            <returns><c>true</c> if it's numeric; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Npoi.Mapper.IColumnInfo">
            <summary>
            Information required for one column when mapping between object and file rows.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.IColumnInfo.HeaderValue">
            <summary>
            Value for the column header.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.IColumnInfo.Attribute">
            <summary>
            The mapped property information.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.IColumnInfo.LastNonBlankValue">
            <summary>
            The last non-blank cell value.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.IColumnInfo.CurrentValue">
            <summary>
            The current cell value, might be used for custom resolving.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.IColumnInfo.HeaderFormat">
            <summary>
            Get the header cell format.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.IColumnInfo.DataFormat">
            <summary>
            Get the data cell format.
            </summary>
        </member>
        <member name="T:Npoi.Mapper.IRowInfo">
            <summary>
            Information required for one row when mapping between object and file rows.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.IRowInfo.ErrorColumnIndex">
            <summary>
            Column index of the first error.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.IRowInfo.ErrorMessage">
            <summary>
            Error message for the first error.
            </summary>
        </member>
        <member name="T:Npoi.Mapper.MapHelper">
            <summary>
            Provide static supportive functionalities for <see cref="T:Npoi.Mapper.Mapper"/> class.
            </summary>
        </member>
        <member name="F:Npoi.Mapper.MapHelper._builtinStyles">
            <summary>
            Stores cached built-in styles to avoid create new ICellStyle for each cell.
            </summary>
        </member>
        <member name="F:Npoi.Mapper.MapHelper._customStyles">
            <summary>
            Stores cached custom styles to avoid create new ICellStyle for each customized cell.
            </summary>
        </member>
        <member name="F:Npoi.Mapper.MapHelper.StringType">
            <summary>
            Caches for type of string during parsing.
            </summary>
        </member>
        <member name="F:Npoi.Mapper.MapHelper.DateTimeType">
            <summary>
            Caches for type of DateTime during parsing.
            </summary>
        </member>
        <member name="F:Npoi.Mapper.MapHelper.ObjectType">
            <summary>
            Caches for type of object.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.MapHelper.MaxLookupRowNum">
            <summary>
            The maximum row number during the detection for column type and style.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.LoadAttributes(System.Collections.Generic.Dictionary{System.Reflection.PropertyInfo,Npoi.Mapper.Attributes.ColumnAttribute},System.Type)">
            <summary>
            Loads attributes to a dictionary.
            </summary>
            <param name="attributes">Container to hold loaded attributes.</param>
            <param name="type">The type object.</param>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.LoadDynamicAttributes(System.Collections.Generic.Dictionary{System.Reflection.PropertyInfo,Npoi.Mapper.Attributes.ColumnAttribute},System.Collections.Generic.Dictionary{System.String,Npoi.Mapper.Attributes.ColumnAttribute},System.Type)">
            <summary>
            Loads dynamic attributes to a dictionary.
            </summary>
            <param name="attributes">Container to hold loaded attributes.</param>
            <param name="dynamicAttributes">Container for dynamic attributes to be loaded.</param>
            <param name="dynamicType">The type object created by runtime.</param>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.ClearCache">
            <summary>
            Clear cached data for cell styles and tracked column info.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.LoadDataFormats(NPOI.SS.UserModel.ISheet,System.Int32,System.Collections.Generic.IEnumerable{Npoi.Mapper.IColumnInfo},System.Collections.Generic.Dictionary{System.Type,System.String})">
            <summary>
            Load cell data format by a specified row.
            </summary>
            <param name="sheet">The sheet to load format from.</param>
            <param name="firstDataRowIndex">The index for the first row to detect.</param>
            <param name="columns">The column collection to load formats into.</param>
            <param name="defaultFormats">The default formats specified for certain types.</param>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.GetCellStyle(NPOI.SS.UserModel.ICell,System.String,System.Nullable{System.Int16})">
            <summary>
            Get the cell style.
            </summary>
            <param name="cell">The cell.</param>
            <param name="customFormat">The custom format string.</param>
            <param name="columnFormat">The default column format number.</param>
            <returns><c>ICellStyle</c> object for the given cell; null if not format specified.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.CreateCellStyle(NPOI.SS.UserModel.IWorkbook,System.String)">
            <summary>
            Creates a <see cref="T:NPOI.SS.UserModel.ICellStyle"/> object by the given <see cref="T:NPOI.SS.UserModel.IWorkbook"/>.
            </summary>
            <param name="workbook">The <see cref="T:NPOI.SS.UserModel.IWorkbook"/> object.</param>
            <param name="format">The custom format.</param>
            <returns>The <see cref="T:NPOI.SS.UserModel.ICellStyle"/> object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.CreateCellStyle(NPOI.SS.UserModel.IWorkbook,System.Int16)">
            <summary>
            Creates a <see cref="T:NPOI.SS.UserModel.ICellStyle"/> object by the given <see cref="T:NPOI.SS.UserModel.IWorkbook"/>.
            </summary>
            <param name="workbook">The <see cref="T:NPOI.SS.UserModel.IWorkbook"/> object.</param>
            <param name="format">The builtin format.</param>
            <returns>The <see cref="T:NPOI.SS.UserModel.ICellStyle"/> object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.GetDefaultStyle(NPOI.SS.UserModel.IWorkbook,System.Object,System.Collections.Generic.Dictionary{System.Type,System.String})">
            <summary>
            Gets a <see cref="T:NPOI.SS.UserModel.ICellStyle"/> object based on value's type by looking up the default format dictionary.
            </summary>
            <param name="workbook">The <see cref="T:NPOI.SS.UserModel.IWorkbook"/> object.</param>
            <param name="value">The value object.</param>
            <param name="defaultFormats">Default format dictionary.</param>
            <returns>The <see cref="T:NPOI.SS.UserModel.ICellStyle"/> object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.GetCellType(NPOI.SS.UserModel.ICell)">
            <summary>
            Get underline cell type if the cell is in formula.
            </summary>
            <param name="cell">The cell.</param>
            <returns>The underline cell type.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.TryGetCellValue(NPOI.SS.UserModel.ICell,System.Type,System.Object@)">
            <summary>
            Try get cell value.
            </summary>
            <param name="cell">The cell to retrieve value.</param>
            <param name="targetType">Type of target property.</param>
            <param name="value">The returned value for cell.</param>
            <returns><c>true</c> if get value successfully; otherwise false.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.GetPropertyInfoByExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Get mapped <c>PropertyInfo</c> by property selector expression.
            </summary>
            <typeparam name="T">The object type that property belongs to.</typeparam>
            <param name="propertySelector">The property selector expression.</param>
            <returns>The mapped <c>PropertyInfo</c> object.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.GetRefinedName(System.String,System.Char[],System.Char[])">
            <summary>
            Get refined name by removing specified chars and truncating by specified chars.
            </summary>
            <param name="name">The name to be refined.</param>
            <param name="ignoringChars">Chars will be removed from the name string.</param>
            <param name="truncatingChars">Chars used truncate the name string.</param>
            <returns>Refined name string.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.GetVariableName(System.String,System.Char[],System.Char[],System.Int32)">
            <summary>
            Get a valid variable name by removing specified chars and truncating by specified chars.
            </summary>
            <param name="rawName">The name to be revised as a valid variable name.</param>
            <param name="ignoringChars">Chars will be removed from the name string.</param>
            <param name="truncatingChars">Chars used truncate the name string.</param>
            <param name="columnIndex">The column index.</param>
            <returns>A valid variable name based on the rawName.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.GetExcelColumnName(System.Int32)">
            <summary>
            Get column name in Excel, like A, B, AC.
            </summary>
            <param name="columnIndex">The column index.</param>
            <returns>The column name that represent the order in Excel.</returns>
        </member>
        <member name="M:Npoi.Mapper.MapHelper.InferColumnDataType(NPOI.SS.UserModel.ISheet,System.Int32,System.Int32)">
            <summary>
            Determines the data type for the specified column according the first non-blank data cell.
            </summary>
            <param name="sheet">The sheet contains data.</param>
            <param name="headerRowIndex">The row index for the header, pass -1 if no header.</param>
            <param name="columnIndex">The index for the column.</param>
            <returns>The type object.</returns>
        </member>
        <member name="T:Npoi.Mapper.Mapper">
            <summary>
            Map object properties with Excel columns for importing from and exporting to file.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Mapper.TrackedColumns">
            <summary>
            Cache the tracked <see cref="T:Npoi.Mapper.ColumnInfo"/> objects by sheet name and target type.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Mapper.Objects">
            <summary>
            Sheet name map to tracked objects in dictionary with row number as key.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Mapper.Workbook">
            <summary>
            The Excel workbook.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Mapper.IgnoredNameChars">
            <summary>
            When map column, chars in this array will be removed from column header.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Mapper.TruncateNameFrom">
            <summary>
            When map column, column name will be truncated from any of chars in this array.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Mapper.TrackObjects">
            <summary>
            Whether to track objects read from the Excel file. Default is true.
            If object tracking is enabled, the <see cref="T:Npoi.Mapper.Mapper"/> object keeps track of objects it yields through the Take() methods.
            You can then modify these objects and save them back to an Excel file without having to specify the list of objects to save.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Mapper.HasHeader">
            <summary>
            Whether to take the first row as column header. Default is true.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.Mapper.HeaderRowIndex">
            <summary>
            Set a zero-based row index for header. It will be auto-detected if not set.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.Mapper.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.Mapper"/> class.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.Mapper.#ctor(System.IO.Stream)">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.Mapper"/> class with stream to read workbook.
            </summary>
            <param name="stream">The input Excel(XLS, XLSX) file stream</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.#ctor(NPOI.SS.UserModel.IWorkbook)">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.Mapper"/> class with a workbook.
            </summary>
            <param name="workbook">The input IWorkbook object.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Npoi.Mapper.Mapper"/> class with file path to read workbook.
            </summary>
            <param name="filePath">The path of Excel file.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Map(System.Func{Npoi.Mapper.IColumnInfo,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean},System.Func{Npoi.Mapper.IColumnInfo,System.Object,System.Boolean})">
            <summary>
            Use this to include and map columns for custom complex resolution.
            </summary>
            <param name="columnFilter">The function to determine whether or not to resolve an unmapped column.</param>
            <param name="tryTake">The function try to import from cell value to the target object.</param>
            <param name="tryPut">The function try to export source object to the cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Map(Npoi.Mapper.Attributes.ColumnAttribute)">
            <summary>
            Map by a <see cref="T:Npoi.Mapper.Attributes.ColumnAttribute"/> object.
            </summary>
            <param name="attribute">The <see cref="T:Npoi.Mapper.Attributes.ColumnAttribute"/> object.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.Mapper.UseLastNonBlankValue``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Specify to use last non-blank value from above cell for a property.
            Typically to address the blank cell issue in merged cells.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="propertySelector">Property selector.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Ignore``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Specify to ignore a property. Ignored property will not be mapped for import and export.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="propertySelector">Property selector.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Format``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Specify the custom format.
            </summary>
            <typeparam name="T">The target object type.</typeparam>
            <param name="customFormat">The custom format, see https://support.office.com/en-nz/article/Create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4 for the syntax.</param>
            <param name="propertySelector">Property selector.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.Mapper.ForHeader(System.Action{NPOI.SS.UserModel.ICell})">
            <summary>
            Sets an action to configure header cells for export.
            </summary>
            <param name="headerAction">Action to configure header cell.</param>
            <returns>The mapper object.</returns>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Take``1(System.Int32,System.Int32,System.Func{``0})">
            <summary>
            Get objects of target type by converting rows in the sheet with specified index (zero based).
            </summary>
            <typeparam name="T">Target object type</typeparam>
            <param name="sheetIndex">The sheet index; default is 0.</param>
            <param name="maxErrorRows">The maximum error rows before stop reading; default is 10.</param>
            <param name="objectInitializer">Factory method to create a new target object.</param>
            <returns>Objects of target type</returns>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Take``1(System.String,System.Int32,System.Func{``0})">
            <summary>
            Get objects of target type by converting rows in the sheet with specified name.
            </summary>
            <typeparam name="T">Target object type</typeparam>
            <param name="sheetName">The sheet name</param>
            <param name="maxErrorRows">The maximum error rows before stopping read; default is 10.</param>
            <param name="objectInitializer">Factory method to create a new target object.</param>
            <returns>Objects of target type</returns>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Put``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)">
            <summary>
            Put objects in the sheet with specified name.
            </summary>
            <typeparam name="T">Target object type</typeparam>
            <param name="objects">The objects to save.</param>
            <param name="sheetName">The sheet name</param>
            <param name="overwrite"><c>true</c> to overwrite existing rows; otherwise append.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Put``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)">
            <summary>
            Put objects in the sheet with specified zero-based index.
            </summary>
            <typeparam name="T">Target object type</typeparam>
            <param name="objects">The objects to save.</param>
            <param name="sheetIndex">The sheet index, default is 0.</param>
            <param name="overwrite"><c>true</c> to overwrite existing rows; otherwise append.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save(System.String)">
            <summary>
            Saves the current workbook to specified file.
            </summary>
            <param name="path">The path to the Excel file.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save(System.IO.Stream)">
            <summary>
            Saves the current workbook to specified stream.
            </summary>
            <param name="stream">The stream to save the workbook.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save``1(System.String,System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean,System.Boolean)">
            <summary>
            Saves the specified objects to the specified Excel file.
            </summary>
            <typeparam name="T">The type of objects to save.</typeparam>
            <param name="path">The path to the Excel file.</param>
            <param name="objects">The objects to save.</param>
            <param name="sheetName">Name of the sheet.</param>
            <param name="overwrite">If file exists, pass <c>true</c> to overwrite existing file; <c>false</c> to merge.</param>
            <param name="xlsx">if <c>true</c> saves in .xlsx format; otherwise, saves in .xls format.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Saves the specified objects to the specified Excel file.
            </summary>
            <typeparam name="T">The type of objects to save.</typeparam>
            <param name="path">The path to the Excel file.</param>
            <param name="objects">The objects to save.</param>
            <param name="sheetIndex">Index of the sheet.</param>
            <param name="overwrite">If file exists, pass <c>true</c> to overwrite existing file; <c>false</c> to merge.</param>
            <param name="xlsx">if <c>true</c> saves in .xlsx format; otherwise, saves in .xls format.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save``1(System.IO.Stream,System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean,System.Boolean)">
            <summary>
            Saves the specified objects to the specified stream.
            </summary>
            <typeparam name="T">The type of objects to save.</typeparam>
            <param name="stream">The stream to write the objects to.</param>
            <param name="objects">The objects to save.</param>
            <param name="sheetName">Name of the sheet.</param>
            <param name="overwrite"><c>true</c> to overwrite existing content; <c>false</c> to merge.</param>
            <param name="xlsx">if set to <c>true</c> saves in .xlsx format; otherwise, saves in .xls format.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save``1(System.IO.Stream,System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Saves the specified objects to the specified stream.
            </summary>
            <typeparam name="T">The type of objects to save.</typeparam>
            <param name="stream">The stream to write the objects to.</param>
            <param name="objects">The objects to save.</param>
            <param name="sheetIndex">Index of the sheet.</param>
            <param name="overwrite"><c>true</c> to overwrite existing content; <c>false</c> to merge.</param>
            <param name="xlsx">if set to <c>true</c> saves in .xlsx format; otherwise, saves in .xls format.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save``1(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Saves tracked objects to the specified Excel file.
            </summary>
            <typeparam name="T">The type of objects to save.</typeparam>
            <param name="path">The path to the Excel file.</param>
            <param name="sheetName">Name of the sheet.</param>
            <param name="overwrite">If file exists, pass <c>true</c> to overwrite existing file; <c>false</c> to merge.</param>
            <param name="xlsx">if <c>true</c> saves in .xlsx format; otherwise, saves in .xls format.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save``1(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Saves tracked objects to the specified Excel file.
            </summary>
            <typeparam name="T">The type of objects to save.</typeparam>
            <param name="path">The path to the Excel file.</param>
            <param name="sheetIndex">Index of the sheet.</param>
            <param name="xlsx">if <c>true</c> saves in .xlsx format; otherwise, saves in .xls format.</param>
            <param name="overwrite">If file exists, pass <c>true</c> to overwrite existing file; <c>false</c> to merge.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save``1(System.IO.Stream,System.String,System.Boolean,System.Boolean)">
            <summary>
            Saves tracked objects to the specified stream.
            </summary>
            <typeparam name="T">The type of objects to save.</typeparam>
            <param name="stream">The stream to write the objects to.</param>
            <param name="sheetName">Name of the sheet.</param>
            <param name="overwrite"><c>true</c> to overwrite existing content; <c>false</c> to merge.</param>
            <param name="xlsx">if <c>true</c> saves in .xlsx format; otherwise, saves in .xls format.</param>
        </member>
        <member name="M:Npoi.Mapper.Mapper.Save``1(System.IO.Stream,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Saves tracked objects to the specified stream.
            </summary>
            <typeparam name="T">The type of objects to save.</typeparam>
            <param name="stream">The stream to write the objects to.</param>
            <param name="sheetIndex">Index of the sheet.</param>
            <param name="overwrite"><c>true</c> to overwrite existing content; <c>false</c> to merge.</param>
            <param name="xlsx">if set to <c>true</c> saves in .xlsx format; otherwise, saves in .xls format.</param>
        </member>
        <member name="T:Npoi.Mapper.RowInfo`1">
            <summary>
            Information for one row that read from file.
            </summary>
            <typeparam name="TTarget">The target mapping type for a row.</typeparam>
        </member>
        <member name="P:Npoi.Mapper.RowInfo`1.RowNumber">
            <summary>
            Row number.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.RowInfo`1.Value">
            <summary>
            Constructed value object from the row.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.RowInfo`1.ErrorColumnIndex">
            <summary>
            Column index of the first error.
            </summary>
        </member>
        <member name="P:Npoi.Mapper.RowInfo`1.ErrorMessage">
            <summary>
            Error message for the first error.
            </summary>
        </member>
        <member name="M:Npoi.Mapper.RowInfo`1.#ctor(System.Int32,`0,System.Int32,System.String)">
            <summary>
            Initialize a new RowData object.
            </summary>
            <param name="rowNumber">The row number</param>
            <param name="value">Constructed value object from the row</param>
            <param name="errorColumnIndex">Column index of the first error cell</param>
            <param name="errorMessage">The error message</param>
        </member>
    </members>
</doc>
